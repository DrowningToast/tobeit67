# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Query {
  user(user: UserInput): Users
  users(user: User): [Users!]
  quizzes(userId: Int): [Quizzes!]
}

"""Camper and Staff user information"""
type Users {
  id: Int
  email: String
  firstname: String
  lastname: String
  grade: Grade
  province: String
  phoneNum: String

  """CAMPER | STAFF"""
  role: Role
  score: Int!
  remainingAttempt: Int!
  scorePercent: Float!
  onsite: Boolean
}

enum Grade {
  M4
  M5
  M6
  P1
  P2
  P3
  OTHER
}

enum Role {
  CAMPER
  STAFF
}

input UserInput {
  email: String
  firstname: String
  lastname: String
  grade: Grade
  province: String
  phoneNum: String
}

input User {
  id: Int
  email: String
  firstname: String
  lastname: String
  grade: Grade
  province: String
  phoneNum: String

  """CAMPER | STAFF"""
  role: Role
  score: Int = 0
  remainingAttempt: Int = 3
  scorePercent: Float = 0
  onsite: Boolean
}

"""Quiz"""
type Quizzes {
  id: Int
  question: String
  choiceA: String
  choiceB: String
  choiceC: String
  choiceD: String
}

type Mutation {
  insert_user(userInput: UserInput!): Users!
  edit_user(target: User!, update: UserEdit!): Users!

  """Require at least one of the args"""
  remove_user(user: UserDelete!): Users!
  submit_quiz(answer: SubmitQuizInput!): QuizResult!
}

input UserEdit {
  id: Int
  firstname: String
  lastname: String
  grade: Grade
  province: String
  phoneNum: String
  emailSent: Boolean
  onsite: Boolean
}

input UserDelete {
  id: Int
  email: String!
}

"""Quiz Result"""
type QuizResult {
  userId: Int
  score: Int
  scorePercent: Float
  remainingAttempt: Int
}

input SubmitQuizInput {
  userId: Float!
  answer: [submitAnswer!]
}

input submitAnswer {
  id: Int!
  answer: String!
}